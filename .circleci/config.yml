version: 2.1
 
orbs:
 aws-cli: circleci/aws-cli@3.1.3
 
# workflows:
#   clean_test_build_&_deploy:
#     jobs:
#       - clean
#       - test:
#            requires:
#              - clean
#       - build:
#           requires:
#             - test
#       - deploy:
#           requires:
#             - build     
     
 
 
jobs:
#  clean:  # name of job
#   executor: aws-cli/default
#   steps:
#     - checkout
#     - aws-cli/setup:
#         aws-access-key-id: AWS_ACCESS_KEY
#         aws-secret-access-key: AWS_SECRET_KEY
#         aws-region: AWS_REGION_NAME
#     - run:
#        name: "ECR Login"
#        command: aws ecr get-login-password --region ap-south-1 | docker login --username AWS --password-stdin $ECR_REGISTRY
#     - run:
#        name: "Delete older Image"
#        command: aws ecr batch-delete-image --repository-name $APP_NAME --image-ids imageTag=$IMAGE_TAG
 
 
 
#  test:  #name of job
#   docker:
#     - image: cimg/node:18.11.0
#   steps:
#     - checkout
#     - run:
#        name: "Install NPM tool"
#        command: npm install
#     - run:
#        name: "Running Test"  
#        command: npm run test
 
 
 
 build:  # name of job
  working_directory: ~/Deploy/Incaendo_Server/
  executor: aws-cli/default
  steps:
    - checkout:
        path: ~/Deploy/Incaendo_Server/
    - aws-cli/setup:
        aws-access-key-id: AWS_ACCESS_KEY
        aws-secret-access-key: AWS_SECRET_KEY
        aws-region: AWS_REGION_NAME
    - setup_remote_docker:
        version: 20.10.14
    - run:
       name: "Building Docker Image"
       command: docker build -t $ECR_REGISTRY/$APP_NAME:$IMAGE_TAG .
    - run:
       name: "ECR Login"
       command: aws ecr get-login-password | docker login --username AWS --password-stdin $ECR_REGISTRY
    - run:
       name: "Pushing  Image into Amazon Elastic Container"
       command: docker push $ECR_REGISTRY/$APP_NAME:$IMAGE_TAG
 
 
 
#  deploy:
#    machine:
#      image: ubuntu-2004:202010-01
#    steps:
#      - add_ssh_keys:
#          fingerprints:
#            - "0d:37:2a:c2:94:c8:b0:08:a9:ac:e6:b2:fd:48:82:15"
#      - run:
#          name: "Deploying the app into AWS EC2"
#          command: ssh -v -o StrictHostKeyChecking=no ec2-user@13.232.29.81 "
#                  aws ecr get-login-password --region ap-south-1 | docker login --username AWS --password-stdin $ECR_REGISTRY &&                  
#                  docker ps -aq | xargs docker stop | xargs docker rm &&
#                  docker images -aq | xargs docker image rm &&
#                  docker run -d -p 80:80 $ECR_REGISTRY/$APP_NAME:$IMAGE_TAG"



  
 

